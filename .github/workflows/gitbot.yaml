name: Testing github bot

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - uses: actions/checkout@v4
      # Set up Python environment
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x  # Using a more flexible version of Python
      # Create requirements.txt and install dependencies
      - run: |
          echo "Checking pip version on GitHub-hosted runner"
          pip3 --version
          # Create the requirements.txt file with package names
          echo "boto" > requirements.txt
          echo "boto3" >> requirements.txt
          echo "flask" >> requirements.txt
          echo "black" >> requirements.txt

          # Show the contents of the requirements.txt file
          echo "Viewing the requirements.txt file contents"
          cat requirements.txt

          # Install dependencies from requirements.txt
          pip install -r requirements.txt

      # Apply Black formatting and push changes if it's a push event
      -  if: success() && github.event_name == 'push'
         run: |
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            
            BRANCH_NAME="${{ github.ref_name }}"  # Correctly use GitHub Actions variable
            echo "Branch Name is $BRANCH_NAME"  # For debugging, can remove later
            
            git fetch origin
            git checkout "$BRANCH_NAME"
          
            # Stage and commit any changes before pulling
            git add .
            git commit --author="github-actions[bot] <github-actions[bot]@users.noreply.github.com>" -m "Update requirements.txt" || echo "No changes to commit"
          
            # Pull changes from the main branch with rebase
            git pull --rebase origin main
            
            # Apply black formatting
            black .  # Apply black formatting
            git add .
            git commit --author="github-actions[bot] <github-actions[bot]@users.noreply.github.com>" -m "Apply black formatting via GitHub Actions" || echo "No changes to commit"
            
            # Check if the branch is 'main' to avoid force pushing to it
            if [[ "$BRANCH_NAME" != "main" ]]; then
              git push origin HEAD:"$BRANCH_NAME"
            else
              echo "Skipping push for 'main' branch"
            fi
