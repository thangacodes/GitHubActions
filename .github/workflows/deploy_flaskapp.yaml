name: GH to deploy python-based flask application
on:
  push:
    branches:
      - main
      - dev
      - stage
  pull_request:
    branches:
      - main
      - dev
      - stage
  workflow_dispatch:
jobs:
  flask_job:
    runs-on: ubuntu-latest
    env:
      PORT_NUMBER: 5000
    steps:
      - name: Code Cloning
        uses: actions/checkout@v3
      - name: Get to know about the GH runner information
        run: |
          echo "Executor name is:" $(whoami)
          echo "GitHub workflow path is:" $(pwd)
          echo "GitHub hosted machine name is:" $(hostname)
      - name: Setup GitHub Action Bot
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      - name: Build Flask Docker Image
        run: |
          echo "Building Docker image in: $(pwd)"
          pwd
          ls -ltr
          docker build -t flaskimage:${{ github.sha }} .
        working-directory: flaskapp
      - name: Image Checking and Running Container
        run: |
          docker images
          # Stop and remove previous container if exists
          if [ "$(docker ps -aq -f name=flaskapp)" ]; then
            echo "Removing existing flaskapp container..."
            docker rm -f flaskapp
          fi
          # Run container
          docker run -d -p ${{ env.PORT_NUMBER }}:${{ env.PORT_NUMBER }} --name flaskapp flaskimage:${{ github.sha }}
          # Wait and check if the app is up with retry mechanism
          echo "Waiting for app to start..."
          retries=10
          until curl -ivk http://localhost:${{ env.PORT_NUMBER }}; do
            if [ $retries -eq 0 ]; then
              echo "App did not start properly"
              exit 1
            fi
            retries=$((retries - 1))
            echo "Retrying to check the app... ($retries retries left)"
            sleep 5
          done
          echo "App is up and running!"
