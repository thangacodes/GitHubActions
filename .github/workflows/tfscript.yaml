name: Terraform CICD

on:
  push:
    branches: 
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: "Specify the environment to deploy (e.g., dev, prod)"
        required: true
        default: "dev"
        type: string

jobs:
  provision-ec2:
    name: "Terraform Lint, Security Check using TFsec, and Plan"
    runs-on: ubuntu-latest
    
    env:
      AWS_REGION: 'ap-south-1'
      TF_VERSION: '1.4.0'
      TFLINT_VERSION: '0.46.1'
      TFSEC_VERSION: '1.28.1'

    steps:
    - name: "Checkout GitHub repository"
      uses: actions/checkout@v3

    - name: "Set AWS Credentials for Dev"
      if: ${{ inputs.environment == 'dev' }}
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.TF_ACCESS_KEY }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.TF_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV

    - name: "Set AWS Credentials for Prod"
      if: ${{ inputs.environment == 'prod' }}
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.TF_ACCESS_KEY }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.TF_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV

    - name: "Configure AWS API Credentials"
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: "Install TFLint"
      run: |
        curl -sLo tflint.zip https://github.com/terraform-linters/tflint/releases/download/v${{ env.TFLINT_VERSION }}/tflint_linux_amd64.zip
        unzip tflint.zip -d /usr/local/bin/
        tflint --version

    - name: "Install tfsec"
      run: |
        curl -sLo tfsec https://github.com/aquasecurity/tfsec/releases/download/v${{ env.TFSEC_VERSION }}/tfsec-linux-amd64
        chmod +x tfsec
        mv tfsec /usr/local/bin/
        tfsec --version
    
    - name: "Setup Terraform"
      uses: hashicorp/setup-terraform@v2
      with: 
        terraform_version: ${{ env.TF_VERSION }}

    - name: "Terraform Init"
      run: |
        terraform init
        tflint
        tfsec
        terraform plan
